# =============================================================================
# EKS CloudForge Application - Deployment Notes
# =============================================================================

🎉 **Congratulations! Your EKS CloudForge application has been deployed successfully!**

## 📊 **Deployment Information**

**Application Name:** {{ include "eks-cloudforge-app.fullname" . }}
**Namespace:** {{ .Release.Namespace }}
**Version:** {{ .Chart.AppVersion }}
**Environment:** {{ .Values.global.labels.environment | default "dev" }}

## 🚀 **Quick Access**

### **Get Application Status:**
```bash
# Check deployment status
kubectl get deployment {{ include "eks-cloudforge-app.fullname" . }} -n {{ .Release.Namespace }}

# Check pod status
kubectl get pods -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Check service status
kubectl get service {{ include "eks-cloudforge-app.serviceName" . }} -n {{ .Release.Namespace }}
```

### **Access the Application:**

{{- if .Values.ingress.enabled }}
**🌐 Web Interface:**
- **URL:** http://{{ (index .Values.ingress.hosts 0).host }}
- **Ingress:** {{ include "eks-cloudforge-app.ingressName" . }}

**🔧 Port Forward (if Ingress not working):**
```bash
kubectl port-forward service/{{ include "eks-cloudforge-app.serviceName" . }} 8080:80 -n {{ .Release.Namespace }}
```
Then visit: http://localhost:8080
{{- else }}
**🔧 Port Forward:**
```bash
kubectl port-forward service/{{ include "eks-cloudforge-app.serviceName" . }} 8080:80 -n {{ .Release.Namespace }}
```
Then visit: http://localhost:8080
{{- end }}

## 📈 **Monitoring & Health Checks**

### **Health Check Endpoints:**
- **Health:** http://{{ (index .Values.ingress.hosts 0).host }}/health
- **Status:** http://{{ (index .Values.ingress.hosts 0).host }}/status
- **Metrics:** http://{{ (index .Values.ingress.hosts 0).host }}/metrics
- **API Info:** http://{{ (index .Values.ingress.hosts 0).host }}/api/info

### **Check Application Logs:**
```bash
# Get pod logs
kubectl logs -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Follow logs in real-time
kubectl logs -l app={{ include "eks-cloudforge-app.name" . }} -f -n {{ .Release.Namespace }}
```

### **Monitor Resource Usage:**
```bash
# Check resource usage
kubectl top pods -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Check HPA status
kubectl get hpa {{ include "eks-cloudforge-app.hpaName" . }} -n {{ .Release.Namespace }}
```

## 🔧 **Auto-Scaling Configuration**

{{- if .Values.autoscaling.enabled }}
**✅ Auto-scaling is ENABLED**

**Scaling Configuration:**
- **Minimum Replicas:** {{ .Values.autoscaling.minReplicas | default 1 }}
- **Maximum Replicas:** {{ .Values.autoscaling.maxReplicas | default 4 }}
- **Target CPU:** {{ .Values.autoscaling.targetCPUUtilizationPercentage | default 70 }}%
- **Target Memory:** {{ .Values.autoscaling.targetMemoryUtilizationPercentage | default 80 }}%

**Check HPA Status:**
```bash
kubectl describe hpa {{ include "eks-cloudforge-app.hpaName" . }} -n {{ .Release.Namespace }}
```
{{- else }}
**❌ Auto-scaling is DISABLED**

To enable auto-scaling, update your values:
```bash
helm upgrade {{ .Release.Name }} . --set autoscaling.enabled=true
```
{{- end }}

## 💰 **Cost Optimization**

**Instance Type:** {{ .Values.costOptimization.instanceType | default "t3.micro" }}
**Estimated Monthly Cost:** {{ .Values.costOptimization.estimatedCostPerMonth | default "$8.47" }}

**Resource Limits (per pod):**
- **CPU Request:** {{ .Values.resources.requests.cpu | default "200m" }}
- **CPU Limit:** {{ .Values.resources.limits.cpu | default "500m" }}
- **Memory Request:** {{ .Values.resources.requests.memory | default "256Mi" }}
- **Memory Limit:** {{ .Values.resources.limits.memory | default "512Mi" }}

## 🔒 **Security Features**

**✅ Security Features Enabled:**
- **Non-root user:** {{ .Values.security.runAsNonRoot | default true }}
- **Privilege escalation disabled:** {{ .Values.security.allowPrivilegeEscalation | default false }}
- **Security context:** Configured
- **Health checks:** Active

## 🛠️ **Troubleshooting**

### **Common Issues:**

**1. Pods not starting:**
```bash
# Check pod events
kubectl describe pod -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Check pod logs
kubectl logs -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}
```

**2. Health checks failing:**
```bash
# Check health endpoint directly
kubectl exec -it $(kubectl get pod -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }} -o jsonpath='{.items[0].metadata.name}') -n {{ .Release.Namespace }} -- curl http://localhost:5000/health
```

**3. Resource constraints:**
```bash
# Check resource usage
kubectl top pods -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Check node resources
kubectl top nodes
```

### **Useful Commands:**

```bash
# Get all resources for this release
kubectl get all -l app={{ include "eks-cloudforge-app.name" . }} -n {{ .Release.Namespace }}

# Check events
kubectl get events --sort-by='.lastTimestamp' -n {{ .Release.Namespace }}

# Check ingress status
kubectl get ingress {{ include "eks-cloudforge-app.ingressName" . }} -n {{ .Release.Namespace }}

# Check service endpoints
kubectl get endpoints {{ include "eks-cloudforge-app.serviceName" . }} -n {{ .Release.Namespace }}
```

## 📚 **Documentation**

**📖 Application Guide:** `docs/application-containerization-guide.md`
**🏗️ Infrastructure Guide:** `docs/terraform-deployment-guide.md`
**🔗 GitHub Repository:** https://github.com/your-org/eks-cloudforge

## 🎯 **Next Steps**

1. **✅ Verify the application is running**
2. **📊 Set up monitoring (Prometheus/Grafana)**
3. **🔗 Configure custom domain (if needed)**
4. **🔒 Set up SSL/TLS certificates**
5. **📈 Monitor performance and costs**
6. **🔄 Set up CI/CD pipeline**

## 💡 **Tips**

- **Cost Monitoring:** Use AWS Cost Explorer to track expenses
- **Performance:** Monitor `/metrics` endpoint for application metrics
- **Scaling:** Watch HPA status during traffic spikes
- **Security:** Regularly update container images and dependencies
- **Backup:** Consider backing up configuration and data

## 🆘 **Support**

**Need help?**
- **Documentation:** Check the `docs/` folder
- **Issues:** Create an issue on GitHub
- **Email:** devops@yourcompany.com

---

**🎉 Your cost-optimized EKS CloudForge application is now running!**

**Happy deploying! 🚀** 
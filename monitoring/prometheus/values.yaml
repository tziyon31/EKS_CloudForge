# =============================================================================
# Prometheus Configuration for EKS CloudForge
# =============================================================================
# Optimized for t3.micro instances with minimal resource usage
# Cost-effective monitoring solution

# =============================================================================
# GLOBAL CONFIGURATION
# =============================================================================

global:
  # Default image tag
  imageTag: "v2.47.0"
  
  # Default image repository
  imageRepository: "prom/prometheus"
  
  # Default image pull policy
  imagePullPolicy: "IfNotPresent"
  
  # Default image pull secrets
  imagePullSecrets: []
  
  # Default service account
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  
  # Default pod annotations
  podAnnotations: {}
  
  # Default pod security context
  podSecurityContext:
    fsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
  
  # Default container security context
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534

# =============================================================================
# PROMETHEUS CONFIGURATION
# =============================================================================

prometheus:
  # Prometheus configuration
  prometheusSpec:
    # Retention period
    retention: 7d
    
    # Retention size
    retentionSize: "2GB"
    
    # Log level
    logLevel: info
    
    # Scrape interval
    scrapeInterval: 30s
    
    # Evaluation interval
    evaluationInterval: 30s
    
    # Route prefix
    routePrefix: /
    
    # Storage spec
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 5Gi
    
    # Resources (optimized for t3.micro)
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi
    
    # Pod metadata
    podMetadata:
      labels:
        app: prometheus
        component: prometheus
        cost-center: "monitoring"
      annotations:
        prometheus.io/scrape: "false"
    
    # Service monitor selector
    serviceMonitorSelector:
      matchLabels:
        app: eks-cloudforge-app
    
    # Pod monitor selector
    podMonitorSelector:
      matchLabels:
        app: eks-cloudforge-app
    
    # Rule selector
    ruleSelector:
      matchLabels:
        app: eks-cloudforge-app
    
    # Alert manager selector
    alertmanagerConfigSelector:
      matchLabels:
        app: eks-cloudforge-app
    
    # Additional scrape configs
    additionalScrapeConfigs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
          - source_labels: [__meta_kubernetes_pod_container_name]
            action: replace
            target_label: container
    
    # Enable features
    enableFeatures: []
    
    # Disable features
    disableFeatures: []
    
    # External labels
    externalLabels:
      cluster: eks-cloudforge
      environment: dev
    
    # External URL
    externalUrl: ""
    
    # Listen local
    listenLocal: false
    
    # Listen address
    listenAddress: ""
    
    # Log format
    logFormat: logfmt
    
    # Log level
    logLevel: info
    
    # Min time
    minTime: ""
    
    # Max time
    maxTime: ""
    
    # Query timeout
    queryTimeout: 2m
    
    # Query concurrency
    queryConcurrency: 50
    
    # Query max samples
    queryMaxSamples: 50000000
    
    # Query lookback delta
    queryLookbackDelta: 5m
    
    # Rules
    rules:
      alert:
        forOutageTolerance: 5m
        forGracePeriod: 10s
        resendDelay: 1m
      groups:
        - name: eks-cloudforge-app
          interval: 30s
          rules:
            - alert: HighCPUUsage
              expr: container_cpu_usage_seconds_total{container="eks-cloudforge-app"} > 0.8
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High CPU usage detected"
                description: "Container {{ $labels.container }} has high CPU usage"
            
            - alert: HighMemoryUsage
              expr: container_memory_usage_bytes{container="eks-cloudforge-app"} > 800000000
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High memory usage detected"
                description: "Container {{ $labels.container }} has high memory usage"
            
            - alert: PodDown
              expr: up{job="eks-cloudforge-app"} == 0
              for: 1m
              labels:
                severity: critical
              annotations:
                summary: "Pod is down"
                description: "Pod {{ $labels.pod }} is down"
            
            - alert: HighResponseTime
              expr: http_request_duration_seconds{job="eks-cloudforge-app"} > 2
              for: 5m
              labels:
                severity: warning
              annotations:
                summary: "High response time detected"
                description: "Response time is high for {{ $labels.instance }}"

# =============================================================================
# ALERTMANAGER CONFIGURATION
# =============================================================================

alertmanager:
  # Alertmanager configuration
  alertmanagerSpec:
    # Image
    image:
      repository: prom/alertmanager
      tag: v0.26.0
    
    # Resources (optimized for t3.micro)
    resources:
      requests:
        cpu: 50m
        memory: 64Mi
      limits:
        cpu: 100m
        memory: 128Mi
    
    # Storage
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: gp2
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi
    
    # Config
    config:
      global:
        resolve_timeout: 5m
        slack_api_url: ""
      
      route:
        group_by: ['alertname']
        group_wait: 10s
        group_interval: 10s
        repeat_interval: 1h
        receiver: 'web.hook'
      
      receivers:
        - name: 'web.hook'
          webhook_configs:
            - url: 'http://127.0.0.1:5001/'
      
      inhibit_rules:
        - source_match:
            severity: 'critical'
          target_match:
            severity: 'warning'
          equal: ['alertname', 'dev', 'instance']

# =============================================================================
# GRAFANA CONFIGURATION
# =============================================================================

grafana:
  # Grafana configuration
  enabled: true
  
  # Image
  image:
    repository: grafana/grafana
    tag: 10.1.0
  
  # Resources (optimized for t3.micro)
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  
  # Storage
  persistence:
    enabled: true
    storageClassName: gp2
    accessMode: ReadWriteOnce
    size: 2Gi
  
  # Admin user
  adminUser: admin
  adminPassword: admin123
  
  # Service
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
  
  # Ingress
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /
    hosts:
      - host: grafana.eks-cloudforge.local
        paths:
          - path: /
            pathType: Prefix
  
  # Dashboards
  dashboards:
    default:
      eks-cloudforge-app:
        gnetId: 1860
        revision: 22
        datasource: Prometheus
        folder: ""
  
  # Datasources
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-operated.monitoring.svc.cluster.local:9090
          access: proxy
          isDefault: true

# =============================================================================
# SERVICE MONITOR CONFIGURATION
# =============================================================================

serviceMonitor:
  # ServiceMonitor for EKS CloudForge app
  eks-cloudforge-app:
    enabled: true
    selector:
      matchLabels:
        app: eks-cloudforge-app
    endpoints:
      - port: http
        path: /metrics
        interval: 30s
        scrapeTimeout: 10s
    namespaceSelector:
      matchNames:
        - default
    jobLabel: eks-cloudforge-app
    podTargetLabels:
      - app
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_label_app]
        targetLabel: app
      - sourceLabels: [__meta_kubernetes_namespace]
        targetLabel: namespace
      - sourceLabels: [__meta_kubernetes_pod_name]
        targetLabel: pod

# =============================================================================
# POD MONITOR CONFIGURATION
# =============================================================================

podMonitor:
  # PodMonitor for EKS CloudForge app
  eks-cloudforge-app:
    enabled: true
    selector:
      matchLabels:
        app: eks-cloudforge-app
    podMetricsEndpoints:
      - port: http
        path: /metrics
        interval: 30s
        scrapeTimeout: 10s
    namespaceSelector:
      matchNames:
        - default
    jobLabel: eks-cloudforge-app
    podTargetLabels:
      - app
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_label_app]
        targetLabel: app
      - sourceLabels: [__meta_kubernetes_namespace]
        targetLabel: namespace
      - sourceLabels: [__meta_kubernetes_pod_name]
        targetLabel: pod

# =============================================================================
# RULES CONFIGURATION
# =============================================================================

rules:
  # PrometheusRule for EKS CloudForge app
  eks-cloudforge-app:
    enabled: true
    groups:
      - name: eks-cloudforge-app
        interval: 30s
        rules:
          - alert: HighCPUUsage
            expr: container_cpu_usage_seconds_total{container="eks-cloudforge-app"} > 0.8
            for: 5m
            labels:
              severity: warning
              cost-center: "monitoring"
            annotations:
              summary: "High CPU usage detected"
              description: "Container {{ $labels.container }} has high CPU usage"
              cost_impact: "May trigger auto-scaling"
          
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes{container="eks-cloudforge-app"} > 800000000
            for: 5m
            labels:
              severity: warning
              cost-center: "monitoring"
            annotations:
              summary: "High memory usage detected"
              description: "Container {{ $labels.container }} has high memory usage"
              cost_impact: "May trigger auto-scaling"
          
          - alert: PodDown
            expr: up{job="eks-cloudforge-app"} == 0
            for: 1m
            labels:
              severity: critical
              cost-center: "monitoring"
            annotations:
              summary: "Pod is down"
              description: "Pod {{ $labels.pod }} is down"
              cost_impact: "Service unavailable"
          
          - alert: HighResponseTime
            expr: http_request_duration_seconds{job="eks-cloudforge-app"} > 2
            for: 5m
            labels:
              severity: warning
              cost-center: "monitoring"
            annotations:
              summary: "High response time detected"
              description: "Response time is high for {{ $labels.instance }}"
              cost_impact: "Poor user experience"
          
          - alert: HighCost
            expr: increase(container_cpu_usage_seconds_total{container="eks-cloudforge-app"}[1h]) > 3600
            for: 10m
            labels:
              severity: warning
              cost-center: "monitoring"
            annotations:
              summary: "High cost detected"
              description: "High CPU usage over 1 hour"
              cost_impact: "May exceed budget"

# =============================================================================
# COST OPTIMIZATION
# =============================================================================

# Resource limits optimized for t3.micro
# Total resource usage across all monitoring components:
# - Prometheus: 200m CPU, 256Mi RAM
# - AlertManager: 100m CPU, 128Mi RAM  
# - Grafana: 200m CPU, 256Mi RAM
# - Total: 500m CPU, 640Mi RAM
# - Available on t3.micro: 1000m CPU, 1024Mi RAM
# - Remaining: 500m CPU, 384Mi RAM for application

# Storage costs:
# - Prometheus: 5Gi = ~$0.50/month
# - AlertManager: 1Gi = ~$0.10/month
# - Grafana: 2Gi = ~$0.20/month
# - Total storage cost: ~$0.80/month

# Estimated total monitoring cost: ~$1.50/month 